@page "/grid"
@using Piet.Grid

<PageTitle>Piet</PageTitle>

<h3>Piet</h3>

<p>
    <input @bind="Height"/>
</p>

<p>
    <input @bind="Width"/>
</p>

<button class="btn btn-primary" @onclick="ResizeGrid">Resize Grid</button>


<table>
    <tbody>
        @*@foreach (var row in GridData)*@
        @for (var i = 0; i < GridData.Height; i++)
        {
            <tr>
            @*@foreach (var value in row)*@
            @for (var j = 0; j < GridData.Width; j++)
            {
                int i_local = i;
                int j_local = j;
                var value = GridData.GetCell(i, j);

                <td style='height: 30px; max-height: 30px; width: 30px; max-width:30px; border: 1px solid black; background-color: rgb(@value.R, @value.G, @value.B)' @onclick="@(e => UpdateColor(i_local, j_local))"></td>
            }
            </tr>
    }
    </tbody>
</table>

@code {

    private PietDataGrid GridData = new PietDataGrid(4, 8);

    private void UpdateColor(int i, int j)
    {
        System.Console.WriteLine($"i: {i} j: {j}");
        GridData.SetRandomCellColor(i, j);
    }

    private void ResizeGrid()
    {
        GridData = new PietDataGrid(Height, Width);
    }

    private int Height { get; set; }
    private int Width { get; set; }

}

@*https://gabriellesc.github.io/piet/index.html*@